/** @file
  VFR file used by the TCG2 configuration component.

Copyright (c) 2015 - 2018, Intel Corporation. All rights reserved.<BR>
Copyright (c) 2023, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
SPDX-License-Identifier: BSD-2-Clause-Patent

**/

#include "Tcg2ConfigNvData.h"

formset
  guid      = TCG2_CONFIG_FORM_SET_GUID,
  title     = STRING_TOKEN(STR_TCG2_TITLE),
  help      = STRING_TOKEN(STR_TCG2_HELP),
  classguid = EFI_HII_PLATFORM_SETUP_FORMSET_GUID,

  efivarstore TCG2_CONFIGURATION_INFO,
    varid = TCG2_CONFIGURATION_INFO_VARSTORE_ID,
    attribute = 0x02,  // EFI variable attributes  EFI_VARIABLE_BOOTSERVICE_ACCESS
    name  = TCG2_CONFIGURATION_INFO,
    guid  = TCG2_CONFIG_FORM_SET_GUID;

  efivarstore TCG2_CONFIGURATION,
    varid = TCG2_CONFIGURATION_VARSTORE_ID,
    attribute = 0x03,  // EFI variable attributes  EFI_VARIABLE_BOOTSERVICE_ACCESS | EFI_VARIABLE_NON_VOLATILE
    name  = TCG2_CONFIGURATION,
    guid  = TCG2_CONFIG_FORM_SET_GUID;

  efivarstore TCG2_VERSION,
    varid = TCG2_VERSION_VARSTORE_ID,
    attribute = 0x03,  // EFI variable attributes  EFI_VARIABLE_BOOTSERVICE_ACCESS | EFI_VARIABLE_NON_VOLATILE
    name  = TCG2_VERSION,
    guid  = TCG2_CONFIG_FORM_SET_GUID;

  form formid = TCG2_CONFIGURATION_FORM_ID,
    title = STRING_TOKEN(STR_TCG2_TITLE);

    subtitle text = STRING_TOKEN(STR_NULL);

    text
      help   = STRING_TOKEN(STR_TCG2_DEVICE_STATE_HELP),
      text   = STRING_TOKEN(STR_TCG2_DEVICE_STATE_PROMPT),
        text   = STRING_TOKEN(STR_TCG2_DEVICE_STATE_CONTENT);

    suppressif ideqvallist TCG2_CONFIGURATION.TpmDevice == TPM_DEVICE_NULL TPM_DEVICE_1_2;

    subtitle text = STRING_TOKEN(STR_NULL);

    text
      help   = STRING_TOKEN(STR_TPM2_ACPI_HID_HELP),
      text   = STRING_TOKEN(STR_TPM2_ACPI_HID_PROMPT),
        text   = STRING_TOKEN(STR_TPM2_ACPI_HID_CONTENT);

    text
      help   = STRING_TOKEN(STR_TPM2_ACPI_REVISION_STATE_HELP),
      text   = STRING_TOKEN(STR_TPM2_ACPI_REVISION_STATE_PROMPT),
        text   = STRING_TOKEN(STR_TPM2_ACPI_REVISION_STATE_CONTENT);

    subtitle text = STRING_TOKEN(STR_NULL);

    text
      help   = STRING_TOKEN(STR_TCG2_DEVICE_INTERFACE_STATE_HELP),
      text   = STRING_TOKEN(STR_TCG2_DEVICE_INTERFACE_STATE_PROMPT),
        text   = STRING_TOKEN(STR_TCG2_DEVICE_INTERFACE_STATE_CONTENT);

    text
      help   = STRING_TOKEN(STR_TCG2_DEVICE_INTERFACE_CAPABILITY_HELP),
      text   = STRING_TOKEN(STR_TCG2_DEVICE_INTERFACE_CAPABILITY_PROMPT),
        text   = STRING_TOKEN(STR_TCG2_DEVICE_INTERFACE_CAPABILITY_CONTENT);

    suppressif ideqval TCG2_CONFIGURATION_INFO.TpmDeviceInterfacePtpFifoSupported == 0
            OR ideqval TCG2_CONFIGURATION_INFO.TpmDeviceInterfacePtpCrbSupported == 0;
    oneof varid  = TCG2_CONFIGURATION_INFO.TpmDeviceInterfaceAttempt,
          questionid = KEY_TPM_DEVICE_INTERFACE,
          prompt = STRING_TOKEN(STR_TCG2_DEVICE_INTERFACE_PROMPT),
          help   = STRING_TOKEN(STR_TCG2_DEVICE_INTERFACE_HELP),
          flags  = INTERACTIVE,
            option text = STRING_TOKEN(STR_TCG2_DEVICE_INTERFACE_TIS),          value = TPM_DEVICE_INTERFACE_TIS,          flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TCG2_DEVICE_INTERFACE_PTP_FIFO),     value = TPM_DEVICE_INTERFACE_PTP_FIFO,     flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TCG2_DEVICE_INTERFACE_PTP_CRB),      value = TPM_DEVICE_INTERFACE_PTP_CRB,      flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;
    endif;

    endif;

    subtitle text = STRING_TOKEN(STR_NULL);

    suppressif ideqvallist TCG2_CONFIGURATION.TpmDevice == TPM_DEVICE_NULL TPM_DEVICE_1_2;
    text
      help   = STRING_TOKEN(STR_TPM2_ACTIVE_HASH_ALGO_HELP),
      text   = STRING_TOKEN(STR_TPM2_ACTIVE_HASH_ALGO),
        text   = STRING_TOKEN(STR_TPM2_ACTIVE_HASH_ALGO_CONTENT);
    text
      help   = STRING_TOKEN(STR_TPM2_SUPPORTED_HASH_ALGO_HELP),
      text   = STRING_TOKEN(STR_TPM2_SUPPORTED_HASH_ALGO),
        text   = STRING_TOKEN(STR_TPM2_SUPPORTED_HASH_ALGO_CONTENT);
    text
      help   = STRING_TOKEN(STR_BIOS_HASH_ALGO_HELP),
      text   = STRING_TOKEN(STR_BIOS_HASH_ALGO),
        text   = STRING_TOKEN(STR_BIOS_HASH_ALGO_CONTENT);

    subtitle text = STRING_TOKEN(STR_NULL);
    subtitle text = STRING_TOKEN(STR_TCG2_PP_OPERATION);

    text
      help   = STRING_TOKEN(STR_TCG2_PPI_VERSION_STATE_HELP),
      text   = STRING_TOKEN(STR_TCG2_PPI_VERSION_STATE_PROMPT),
        text   = STRING_TOKEN(STR_TCG2_PPI_VERSION_STATE_CONTENT);

    oneof name = Tpm2Operation,
          questionid = KEY_TPM2_OPERATION,
          prompt = STRING_TOKEN(STR_TCG2_OPERATION),
          help   = STRING_TOKEN(STR_TCG2_OPERATION_HELP),
          flags  = INTERACTIVE | NUMERIC_SIZE_1,
            option text = STRING_TOKEN(STR_TCG2_NO_ACTION), value = TCG2_PHYSICAL_PRESENCE_NO_ACTION, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TCG2_CLEAR), value = TCG2_PHYSICAL_PRESENCE_CLEAR, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL);
    subtitle text = STRING_TOKEN(STR_TCG2_CONFIGURATION);

    text
      help   = STRING_TOKEN(STR_TCG2_SUPPORTED_EVENT_LOG_FORMAT_HELP),
      text   = STRING_TOKEN(STR_TCG2_SUPPORTED_EVENT_LOG_FORMAT),
        text   = STRING_TOKEN(STR_TCG2_SUPPORTED_EVENT_LOG_FORMAT_CONTENT);

    text
      help   = STRING_TOKEN(STR_TCG2_HASH_ALGO_BITMAP_HELP),
      text   = STRING_TOKEN(STR_TCG2_HASH_ALGO_BITMAP),
        text   = STRING_TOKEN(STR_TCG2_HASH_ALGO_BITMAP_CONTENT);

    text
      help   = STRING_TOKEN(STR_TCG2_NUMBER_OF_PCR_BANKS_HELP),
      text   = STRING_TOKEN(STR_TCG2_NUMBER_OF_PCR_BANKS),
        text   = STRING_TOKEN(STR_TCG2_NUMBER_OF_PCR_BANKS_CONTENT);

    text
      help   = STRING_TOKEN(STR_TCG2_ACTIVE_PCR_BANKS_HELP),
      text   = STRING_TOKEN(STR_TCG2_ACTIVE_PCR_BANKS),
        text   = STRING_TOKEN(STR_TCG2_ACTIVE_PCR_BANKS_CONTENT);

    subtitle text = STRING_TOKEN(STR_NULL);

    endif;

  endform;

endformset;
