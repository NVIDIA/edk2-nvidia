#/** @file
#
#  This Package provides all definitions for NVIDIA silicon
#
#  SPDX-FileCopyrightText: Copyright (c) 2018-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
#  SPDX-License-Identifier: BSD-2-Clause-Patent
#
#**/

[Defines]
  DEC_SPECIFICATION              = 0x00010005
  PACKAGE_NAME                   = NVIDIA
  PACKAGE_GUID                   = ca7b8ebd-d003-43db-8c9e-39e0e59a2e2a
  PACKAGE_VERSION                = 0.1

################################################################################
#
# Include Section - list of Include Paths that are provided by this package.
#                   Comments are used for Keywords and Module Types.
#
# Supported Module Types:
#  BASE SEC PEI_CORE PEIM DXE_CORE DXE_DRIVER DXE_RUNTIME_DRIVER DXE_SMM_DRIVER DXE_SAL_DRIVER UEFI_DRIVER UEFI_APPLICATION
#
################################################################################

[Includes]
  Include
  Include/Server
  Include/StandaloneMm
  Include/Tegra
  Test/Mock/Include

[Guids.common]
  gNVIDIATokenSpaceGuid                  = { 0xed3374ef, 0x767b, 0x42fa, { 0xaf, 0x70, 0xdb, 0x52, 0x0a, 0x39, 0x28, 0x22 } }
  #Guid for public variables
  gNVIDIAPublicVariableGuid              = { 0x781e084c, 0xa330, 0x417c, { 0xb6, 0x78, 0x38, 0xe6, 0x96, 0x38, 0x0c, 0xb9 } }

  # Device types for device discovery
  gNVIDIANonDiscoverableBpmpDeviceGuid        = { 0x0dd0840a, 0x6f64, 0x4ba4, { 0x87, 0x99, 0x75, 0x37, 0xb7, 0x74, 0x82, 0x8e } }
  gNVIDIANonDiscoverableHspTopDeviceGuid      = { 0xf9c6f44f, 0xa8fe, 0x4771, { 0xa7, 0x13, 0xf6, 0x77, 0xe5, 0xfa, 0x66, 0x38 } }
  gNVIDIANonDiscoverableT234DisplayDeviceGuid = { 0xeedde751, 0x5c74, 0x41a1, { 0xa3, 0x00, 0xca, 0x82, 0x17, 0x61, 0x35, 0x56 } }
  gNVIDIANonDiscoverableT264DisplayDeviceGuid = { 0x6dac306e, 0x6ac0, 0x4902, { 0x90, 0x3e, 0xd9, 0xc2, 0xf5, 0x2d, 0x78, 0x68 } }

  #GPIO devices
  gNVIDIANonDiscoverableT234GpioDeviceGuid     = { 0x1d0e1fbb, 0x708b, 0x4539, { 0x89, 0xe5, 0xa3, 0x4a, 0xea, 0xe6, 0xed, 0xfd } }
  gNVIDIANonDiscoverableT234GpioAonDeviceGuid  = { 0x4a23a729, 0x3534, 0x45f6, { 0x91, 0xc5, 0x1a, 0xe2, 0xbd, 0x44, 0xeb, 0x44 } }
  gNVIDIANonDiscoverableT23xGpioDeviceGuid     = { 0xf0e65003, 0x57ad, 0x4610, { 0xae, 0xf7, 0x9f, 0x85, 0x52, 0x2a, 0xa2, 0xae } }
  gNVIDIANonDiscoverableT264GpioMainDeviceGuid = { 0x0bfb9135, 0x29a5, 0x4d90, { 0x97, 0x4c, 0x04, 0x88, 0x42, 0x14, 0xf9, 0x32 } }
  gNVIDIANonDiscoverableT264GpioAonDeviceGuid  = { 0xd2c1cfb1, 0xbdb7, 0x48a9, { 0x87, 0xfa, 0x5a, 0x50, 0x77, 0xfc, 0x03, 0x63 } }
  gNVIDIANonDiscoverableT264GpioUphyDeviceGuid = { 0x05da80dd, 0x255e, 0x45bd, { 0xba, 0x3b, 0x79, 0xac, 0x74, 0x0e, 0x7d, 0x08 } }
  gNVIDIANonDiscoverableTH500GpioDeviceGuid    = { 0x5f584baa, 0xf26f, 0x480c, { 0xad, 0xfa, 0xb2, 0x8f, 0x16, 0x72, 0x66, 0x38 } }
  gNVIDIANonDiscoverableTH500GpioAonDeviceGuid = { 0x70564152, 0x7156, 0x42b1, { 0x9b, 0x28, 0xb1, 0x47, 0xf1, 0xd2, 0xc1, 0xa6 } }

  #PCIe
  gNVIDIANonDiscoverableT234PcieDeviceGuid    = { 0xdd787153, 0x8883, 0x4c3a, { 0xb0, 0xb6, 0x32, 0xc9, 0x92, 0xff, 0xf8, 0xe1 } }
  gNVIDIANonDiscoverableTH500PcieDeviceGuid   = { 0x93f1bf54, 0x3ee4, 0x433b, { 0x8a, 0x3a, 0x2c, 0x22, 0x21, 0xe9, 0x92, 0xab } }
  gNVIDIANonDiscoverableGenericPcieDeviceGuid = { 0x4078e093, 0x8253, 0x4b19, { 0x85, 0x46, 0xfa, 0x0c, 0xe5, 0x0f, 0xb2, 0x1b } }

  #I2C device types
  gNVIDIAI2cMaxim77620                   = { 0x1fa60dc3, 0x0ecd, 0x4345, { 0x9b, 0xbd, 0x50, 0xf4, 0x5b, 0x55, 0x35, 0x06 } }
  gNVIDIAI2cMaxim20024                   = { 0xa7f8c208, 0xbe90, 0x4363, { 0x84, 0xc5, 0x1c, 0xc9, 0xed, 0x04, 0xe7, 0x19 } }
  gNVIDIAI2cMaxim77851                   = { 0x08fe86dc, 0x153b, 0x4c91, { 0xa1, 0x44, 0xd1, 0xa8, 0x02, 0x0a, 0xd0, 0x1c } }
  gNVIDIAI2cVrsPseq                      = { 0xdfeecb89, 0x3849, 0x4917, { 0xbf, 0xb3, 0xca, 0x02, 0x2b, 0xa2, 0x4a, 0xc1 } }
  gNVIDIAI2cNct3018y                     = { 0x26deb510, 0x143c, 0x11ed, { 0x80, 0x18, 0x83, 0x26, 0x7f, 0xa3, 0x28, 0xb3 } }
  gNVIDIAEeprom                          = { 0xe7da2b8d, 0x25bd, 0x4e6f, { 0xac, 0xfc, 0x3b, 0x62, 0x18, 0x70, 0x73, 0xbd } }
  gNVIDIAI2cTca9539                      = { 0x640bcec1, 0x2c6a, 0x4be6, { 0x86, 0x59, 0x5a, 0x37, 0xaa, 0x0c, 0xc8, 0x30 } }
  gNVIDIAI2cPca9535                      = { 0x216eac27, 0xdae3, 0x43b1, { 0x93, 0xd8, 0x8d, 0xc7, 0xe3, 0x94, 0x88, 0x91 } }
  gNVIDIAI2cNcp81599                     = { 0x9a6029ec, 0xee77, 0x4f8a, { 0x8d, 0x21, 0xb7, 0x11, 0xc8, 0x5a, 0x57, 0xa1 } }
  gNVIDIAI2cBmcSSIF                      = { 0xb4fcca9e, 0x93ec, 0x4fb5, { 0x87, 0x81, 0x54, 0x07, 0x0c, 0x54, 0x39, 0x06 } }
  gNVIDIAI2cFpga                         = { 0xd51998dc, 0xdf15, 0x453c, { 0xb7, 0xc3, 0xa5, 0xb2, 0xfa, 0x61, 0xfe, 0x73 } }
  gNVIDIAI2cUnknown                      = { 0xc58c5085, 0xafed, 0x4844, { 0x81, 0x06, 0x2a, 0xc6, 0xf2, 0x5a, 0xf5, 0xd7 } }

  #I2C controllers
  gNVIDIANonDiscoverableI2cDeviceGuid = { 0xe550ed9d, 0xb880, 0x4817, { 0xaa, 0xaa, 0x0e, 0x0e, 0xca, 0xf6, 0x57, 0x6c } }

  #Secure Engine
  gNVIDIANonDiscoverableT234SeDeviceGuid = { 0x9f21731a, 0x52f0, 0x4e1c, { 0x87, 0x9c, 0x09, 0x7a, 0x70, 0x00, 0xc9, 0x48 } }

  #SPI controllers
  gNVIDIANonDiscoverableSpiDeviceGuid = { 0xa3aea7c9, 0x7926, 0x4b23, {0xbc, 0x51, 0x69, 0xec, 0x55, 0xa0, 0x26, 0xdd } }

  #QSPI device types
  gNVIDIANonDiscoverableQspiDeviceGuid   = { 0x448fe9e9, 0x5479, 0x4afa, { 0x91, 0x82, 0xf2, 0x6f, 0x18, 0x78, 0xc1, 0x48 } }

  #EFUSE device
  gNVIDIANonDiscoverableEFuseDeviceGuid = { 0x824a08df, 0x8951, 0x43c3, { 0xba, 0x53, 0x22, 0x1b, 0x60, 0xac, 0x27, 0x4b } }

  #PINMUX device
  gNVIDIANonDiscoverablePinMuxDeviceGuid = { 0xcf3d0a91, 0xe309, 0x4f2a, { 0x95, 0xe1, 0xf3, 0x43, 0xca, 0x44, 0x2c, 0x94 } }

  #USBPAD devices
  gNVIDIANonDiscoverableT234UsbPadDeviceGuid    = { 0x718f9436, 0x746a, 0x408d, { 0xbe, 0x45, 0xf6, 0xbf, 0xde, 0xa2, 0x48, 0x71 } }
  gNVIDIANonDiscoverableCurrentUsbPadDeviceGuid = { 0x259ed22d, 0xc34c, 0x47f6, { 0xa3, 0x64, 0xd5, 0x59, 0xf4, 0xef, 0xd1, 0xbb } }

  #UART device
  gNVIDIANonDiscoverableSbsaUartDeviceGuid    = { 0x76a54667, 0x2c0e, 0x48e8, { 0x84, 0x36, 0x34, 0xce, 0xba, 0xad, 0x4b, 0x88 } }
  gNVIDIANonDiscoverableCombinedUartDeviceGuid = { 0xcdaa1cdd, 0x2fb3, 0x4b5c, { 0x86, 0x2a, 0x58, 0x1d, 0xd7, 0xe0, 0x0c, 0x5a } }
  gNVIDIANonDiscoverableUtcUartDeviceGuid      = { 0x4b36b7a4, 0xf4fc, 0x498d, { 0x90, 0xed, 0xcb, 0x1d, 0x41, 0x35, 0x03, 0x5d } }

  #Direct kernel boot device
  gNVIDIARcmKernelGuid = { 0x768a084d, 0x7938, 0x4142, { 0xba, 0xc3, 0xfa, 0xdc, 0x9e, 0xbf, 0xec, 0x47 } }

  #PWM device
  gNVIDIANonDiscoverablePwmDeviceGuid = { 0xdff598b2, 0x77b7, 0x42f6, { 0xaa, 0x68, 0x75, 0xc2, 0xb8, 0x78, 0xa1, 0x7f } }

  #Synopsys Eqos devices
  gDwEqosNetNonDiscoverableDeviceGuid     = { 0x3bba7552, 0xf8af, 0x4e10, { 0x98, 0x5f, 0x22, 0x64, 0xf6, 0xd6, 0xfe, 0x3a } }

  #Mgbe devices
  gDwMgbeNetNonDiscoverableDeviceGuid     = { 0x755326c7, 0x983f, 0x4f6d, { 0xa5, 0xb8, 0x76, 0x4c, 0x33, 0x94, 0x69, 0xf7 } }

  #SMMU V3 device types
  gNVIDIANonDiscoverableSmmuV3DeviceGuid = { 0x1b3621ba, 0xf3e4, 0x4fc5, { 0x93, 0x86, 0xb4, 0xbd, 0xf2, 0xb8, 0x25, 0xd5 } }

  #NVIDIA Resource Config Formset
  gNVIDIAResourceConfigFormsetGuid = { 0x685c0b6e, 0x11af, 0x47cf, { 0xa9, 0xef, 0x95, 0xac, 0x18, 0x68, 0x73, 0xc3 } }

  #NVIDIA Vendor Device Discovery Guid
  gNVIDIAVendorDeviceDiscoveryGuid = { 0x1e5a432c, 0x0466, 0x4d31, { 0xb0, 0x09, 0xd4, 0xd9, 0x23, 0x92, 0x71, 0xd3 } }

  #NVIDIA Kernel Command Line Update Guid
  gNVIDIAKernelCmdLineUpdateGuid = { 0xc61a1a9a, 0x8f92, 0x4e2e, { 0x97, 0x8d, 0x04, 0x8d, 0x81, 0xed, 0xdc, 0x8b } }

  #NVIDIA Platform Logo Guid
  gNVIDIAPlatformLogoGuid = { 0x971F9B1F, 0x217C, 0x4F02, { 0xB5, 0xD5, 0xD5, 0x50, 0xA5, 0xB6, 0xCB, 0x82 } }

  #Xudc device types
  gNVIDIANonDiscoverableXudcDeviceGuid = { 0xb7c195ce, 0x565b, 0x4a4d, { 0xaa, 0x9a, 0xb5, 0x81, 0x27, 0x3d, 0x41, 0xff } }

  #Device Discovery Context Guid
  gNVIDIADeviceDiscoveryContextGuid = { 0x72d0e8a8, 0x43c0, 0x4206, { 0x94, 0xa3, 0x5a, 0xc5, 0xa5, 0x64, 0x98, 0x35 } }

  #Platform Resource Data GUID
  gNVIDIAPlatformResourceDataGuid = { 0x782B95B2, 0x71BF, 0x4955, { 0x92, 0x72, 0x6C, 0x3F, 0x76, 0x87, 0x7A, 0xEF } }

  #Standalone MM Device Memory Region GUID
  gEfiStandaloneMmDeviceMemoryRegions = { 0x8411e3df, 0xafe3, 0x4803, { 0x88, 0xae, 0xbc, 0x64, 0x1a, 0xd1, 0x93, 0xde } }

  #Tegra enable only devices
  gNVIDIANonDiscoverableEnableOnlyDeviceGuid = { 0x82b04f76, 0xeca5, 0x4bed, { 0x97, 0xb9, 0x1a, 0x7d, 0x43, 0xe9, 0xc1, 0x25 } }

  #DpAux PadCtl device
  gNVIDIANonDiscoverableNVIDIADpAuxDeviceGuid = { 0x79092902, 0x6eb9, 0x4d5c, { 0x9d, 0x35, 0x41, 0xc0, 0xf3, 0x65, 0x55, 0x6c } }

  #Tegra CPU Frequency devices
  gNVIDIACpuFreqT234  = { 0xa0d165f5, 0xc9bb, 0x49e9, { 0x94, 0xbe, 0x06, 0xd6, 0xb1, 0xba, 0x68, 0xf6 } }
  gNVIDIACpuFreqT264  = { 0x148ab323, 0x9a2b, 0x4afe, { 0xa8, 0xef, 0x02, 0x61, 0x9e, 0x38, 0xe1, 0x54 } }
  gNVIDIACpuFreqTH500 = { 0xc7b08094, 0xf705, 0x443a, { 0xba, 0x60, 0x69, 0x0d, 0x47, 0x4d, 0x0f, 0x2d } }

  #Dsd device property guid defined in https://github.com/UEFI/DSD-Guide
  gDsdDevicePropertyGuid = { 0xdaffd814, 0x6eba, 0x4d8c, { 0x8a, 0x91, 0xbc, 0x9b, 0xbf, 0x4a, 0xa3, 0x01 } }

  # guid to store the buffer addresses that are part of the MM manifest
  gNVIDIAStMMBuffersGuid = { 0x940fc864, 0x5a7e, 0x4e94, { 0xb5, 0x45, 0xc2, 0x23, 0xad, 0x3f, 0x61, 0x34 } }

  # file guid of the enroll default keys app which is enrolled as a sysprep
  # option. Define it here (ideally should be in the SecurityPkg)
  gEnrollFromDefaultKeysAppFileGuid = { 0x6F18CB2F, 0x1293, 0x4BC1, { 0xAB, 0xB8, 0x35, 0xF8, 0x4C, 0x71, 0x81, 0x2E } }

  # guid used to indentify the HOB for the TH500 MB1 variable data
  gNVIDIATH500MB1DataGuid        = { 0x4157e730, 0x5cd2, 0x45c4, { 0x8d, 0x0d, 0xf4, 0x31, 0xeb, 0xb6, 0xf2, 0x20 } }
  gNVIDIATH500MB1DefaultDataGuid = { 0x02f7ed55, 0x44ba, 0x4f68, { 0x87, 0x43, 0xe4, 0xc2, 0x03, 0x8d, 0x00, 0xf6 } }
  gNVIDIAMmMb1RecordGuid         = { 0x46213b77, 0xf89a, 0x43e8, { 0x9d, 0xf7, 0x67, 0xc6, 0x74, 0x07, 0x2d, 0xf4 } }

  # guid to request MM services by RAS SP
  gNVIDIARasLogMmGuid   = { 0x51bbb006, 0x4bd4, 0x11ed, { 0xbb, 0xd1, 0x00, 0x50, 0x56, 0x8f, 0x46, 0x25 } }

  # guid to request MM services by SATMC SP.
  gNVIDIASatMcMmGuid = { 0x227cf618, 0xd8af, 0x4554, { 0x98, 0xf9, 0xe9, 0x6b, 0x07, 0x41, 0x60, 0xee } }

  # guid to request MM services by RAS SP to write CMET records.
  gNVIDIARasCmetMmGuid = { 0x0e50d946, 0x65fa, 0x11ed, { 0xb4, 0x79, 0x00, 0x50, 0x56, 0x8f, 0x46, 0x25 } }

  # User authentication for BIOS Setup Menu
  gUserAuthFeaturePkgTokenSpaceGuid = { 0xa2793a6e, 0x6af1, 0x45c4, { 0x88, 0x4d, 0x3d, 0x0c, 0x7a, 0xfe, 0x91, 0xc6 } }
  gUserAuthenticationGuid           = { 0xee24a7f7, 0x606b, 0x4724, { 0xb3, 0xc9, 0xf5, 0xae, 0x4a, 0x3b, 0x81, 0x65 } }

  # guid to start BeforeConsoleEvent service.
  gNVIDIABeforeConsoleEventGuid = { 0x974180a0, 0xa203, 0x43c8, { 0xb1, 0x12, 0x48, 0x70, 0xe1, 0xdb, 0xd6, 0x48 } }

  # guid to indicate Default Variable Driver completion.
  gNVIDIADefaultVarDoneGuid = { 0x386dea10, 0xe2c3, 0x4848, { 0xa6, 0xc0, 0x63,0x61, 0x32, 0xf5, 0x65,0x60 } }

  # guid to support Redfish Boot Order formset.
  gPlatformRedfishBootFormsetGuid = { 0x35aff689, 0x1c07, 0x4cac, { 0x90, 0xd5, 0xaa, 0x57, 0x20, 0xcb, 0x46, 0x6b } }

  # guid of fTPM TA in OP-TEE
  gNVIDIAFtpmOpteeGuid = { 0xbc50d971, 0xd4c9, 0x42c4, { 0x82, 0xcb, 0x34, 0x3f, 0xb7, 0xf3, 0x78, 0x96 } }

  # guid to request MM services by DXE and BS for Oem partition access.
  gNVIDIAOemPartitionGuid = { 0x37facb7b, 0x6e85, 0x4587, { 0x96, 0xb7, 0xb2, 0x57, 0xd4, 0xc9, 0xcf, 0x3a } }

  # guid to signal connect is complete
  gNVIDIAConnectCompleteEventGuid = { 0x7825aebb, 0xae38, 0x41bd, { 0x87, 0xb5, 0xa6, 0x7a, 0x8b, 0xb2, 0xc5, 0x85 } }

  # Renesas uPD72020x firmware binary
  gNVIDIAuPD72020xFirmwareGuid = { 0xb4cf32a2, 0x790b, 0x11ee, { 0xb8, 0x74, 0xab, 0xbe, 0x29, 0xf4, 0x1d, 0xde } }

  # HMC Smbios variable
  gNVIDIAHmcSmbiosVariableGuid = { 0x4fb729c3, 0x3453, 0x4cc0, { 0xac, 0xeb, 0xd3, 0xe6, 0xf9, 0x12, 0xca, 0x3d } }
  gNVIDIAEndOfPostToBmcGuid    = { 0xfb6ed506, 0x0f9c, 0x49e2, { 0x9e, 0xf0, 0xac, 0x91, 0x84, 0x61, 0x50, 0xc2 } }
  # L2 Reset Msg to RASFW
  gNVIDIAMmRasResetReqGuid                        = { 0x6a0d9b18, 0x3bb7, 0x45c8, { 0xa3, 0xcd, 0x57, 0x01, 0x05, 0x11, 0xf9, 0xf0 } }
  # Namespace GUID used for UUID generation from serial number
  gNVIDIASerialNumberNamespaceGuid = { 0x765695f0, 0x9c75, 0x4670, { 0xad, 0x57, 0x6d, 0x3a, 0xf4, 0xd1, 0x88, 0x03 } }

[Protocols]
  gNVIDIADeviceTreeCompatibilityProtocolGuid            = { 0x1e710608, 0x28a3, 0x4c0b, { 0x9b, 0xec, 0x1c, 0x75, 0x49, 0xa7, 0x0d, 0x90 } }
  gNVIDIADeviceTreeNodeProtocolGuid                     = { 0x149670c5, 0xb07b, 0x407a, { 0xae, 0x57, 0x39, 0xd0, 0xca, 0x51, 0x37, 0x80 } }
  gNVIDIADeviceEnumerationPresentProtocolGuid           = { 0xc024b4c9, 0x8317, 0x4206, { 0xad, 0xc5, 0xf4, 0x67, 0xc6, 0x2d, 0x88, 0xd4 } }
  gNVIDIANonDiscoverableDeviceProtocolGuid              = { 0x6313200a, 0xd78d, 0x4034, { 0x9f, 0x39, 0x7a, 0x61, 0x61, 0x5c, 0x14, 0x8f } }
  gNVIDIAAmlGenerationProtocolGuid                      = { 0x1540db5e, 0x35e0, 0x37e0, { 0xae, 0x52, 0x3c, 0xf9, 0x25, 0x76, 0xc7, 0x34 } }
  gNVIDIAAmlPatchProtocolGuid                           = { 0xb763a571, 0xd6ca, 0x54cb, { 0x39, 0xa0, 0x34, 0xe8, 0xc2, 0x9a, 0x56, 0x72 } }
  gNVIDIABpmpIpcProtocolGuid                            = { 0x2b560a1f, 0x8e7b, 0x45a0, { 0x96, 0x8f, 0x7c, 0xa8, 0x2b, 0xd2, 0xb5, 0x99 } }
  gNVIDIADummyBpmpIpcProtocolGuid                       = { 0xcd13cc54, 0x1d67, 0x4c8d, { 0x87, 0x09, 0x04, 0x04, 0x5b, 0x1f, 0x5e, 0x48 } }
  gNVIDIAHspDoorbellProtocolGuid                        = { 0xe72494c2, 0xdb40, 0x4c06, { 0xbe, 0x76, 0xdc, 0x53, 0x01, 0x2f, 0x2c, 0x59 } }
  gNVIDIAPowerGateNodeProtocolGuid                      = { 0xdc05db20, 0x5dde, 0x4e97, { 0xb3, 0xc7, 0x7b, 0x37, 0x4c, 0x40, 0x73, 0xbb } }
  gNVIDIAC2cNodeProtocolGuid                            = { 0x50740212, 0xd769, 0x4b70, { 0xaf, 0x49, 0x3d, 0xa2, 0x95, 0x4b, 0xe2, 0xca } }
  gNVIDIAClockNodeProtocolGuid                          = { 0x6fa542ef, 0xec08, 0x4450, { 0xb1, 0x7b, 0xf6, 0x31, 0x5d, 0x32, 0xc5, 0x40 } }
  gNVIDIAResetNodeProtocolGuid                          = { 0xf027ceae, 0xa96d, 0x490d, { 0xbe, 0x82, 0x12, 0x35, 0x81, 0xef, 0x11, 0x88 } }
  gNVIDIAClockParentsProtocolGuid                       = { 0x26d3a358, 0xa8eb, 0x4f14, { 0x84, 0x0c, 0x09, 0xa2, 0x5b, 0xc4, 0xaa, 0x88 } }
  gNVIDIARegulatorProtocolGuid                          = { 0x48e74d70, 0x8dd4, 0x43af, { 0xad, 0x0d, 0x8a, 0x52, 0x05, 0x59, 0x81, 0x6b } }
  gNVIDIAFixedRegulatorsPresentProtocolGuid             = { 0x9f2318e9, 0xbdd8, 0x4063, { 0xbb, 0x23, 0x33, 0xf8, 0xf3, 0x82, 0x30, 0x34 } }
  gNVIDIAPmicRegulatorsPresentProtocolGuid              = { 0xf97a99b2, 0xb4e6, 0x40d7, { 0x8c, 0xde, 0x35, 0xd9, 0xd9, 0xd4, 0x19, 0xdb } }
  gNVIDIAAllRegulatorsPresentProtocolGuid               = { 0xbd777ea8, 0x618b, 0x492c, { 0x9d, 0x89, 0xdb, 0xc4, 0xd3, 0x31, 0x80, 0x6e } }
  gNVIDIAPciHostBridgeProtocolGuid                      = { 0xf97849e9, 0x07e9, 0x4162, { 0xbd, 0x02, 0x2f, 0xb2, 0xaf, 0x6d, 0x4d, 0xb0 } }
  gNVIDIAQspiControllerProtocolGuid                     = { 0x01458542, 0x64b6, 0x42d9, { 0x80, 0x8c, 0x54, 0x42, 0x54, 0xd8, 0x8f, 0xc6 } }
  gNVIDIANorFlashProtocolGuid                           = { 0xc3ff8100, 0x150d, 0x4744, { 0xa6, 0x8b, 0x19, 0xa5, 0x43, 0x5d, 0x5d, 0xad } }
  gNVIDIANorFlash2ProtocolGuid                          = { 0x94fe34fb, 0x6a5f, 0x45b2, { 0x86, 0x82, 0x04, 0x54, 0x14, 0x59, 0x66, 0xd6 } }
  gNVIDIAEFuseProtocolGuid                              = { 0xaefea0bf, 0x1963, 0x4523, { 0x98, 0xe9, 0x6f, 0x76, 0xa4, 0x6f, 0xca, 0x02 } }
  gNVIDIAPinMuxProtocolGuid                             = { 0x284ebb8b, 0x58eb, 0x4dff, { 0xbf, 0x97, 0x2c, 0x95, 0x89, 0xb0, 0x01, 0x0f } }
  gNVIDIAUsbPadCtlProtocolGuid                          = { 0xadf12597, 0xf8bd, 0x4f06, { 0xb6, 0x6a, 0xe1, 0x7a, 0xc9, 0xe3, 0x96, 0x4c } }
  gNVIDIAXhciControllerProtocolGuid                     = { 0xe516021f, 0x012a, 0x4b1f, { 0x91, 0x5b, 0x2a, 0x6e, 0x05, 0xb2, 0xe9, 0xe2 } }
  gNVIDIAXudcControllerProtocolGuid                     = { 0xefbaacf8, 0x4899, 0x45af, { 0x85, 0x74, 0xdc, 0x2e, 0x6a, 0x81, 0x9d, 0x33 } }
  gNVIDIAPciRootBridgeConfigurationIoProtocolGuid       = { 0xbcb96ec9, 0xa3f3, 0x414f, { 0x9b, 0xc0, 0x9c, 0xd9, 0x68, 0xf2, 0x0a, 0x39 } }
  gNVIDIACvmEepromProtocolGuid                          = { 0x3f465b0c, 0x05c4, 0x418b, { 0xa2, 0x51, 0xc7, 0x55, 0xb0, 0xbc, 0x6f, 0xd7 } }
  gNVIDIACvbEepromProtocolGuid                          = { 0x69947f28, 0x0dd1, 0x4635, { 0xbb, 0xe9, 0x04, 0xb1, 0xe5, 0x34, 0x76, 0x9c } }
  gNVIDIAEepromProtocolGuid                             = { 0xe59c2d73, 0xfb12, 0x4434, { 0xac, 0x52, 0x0c, 0xbb, 0x61, 0xe9, 0x61, 0x15 } }
  gNVIDIASeRngProtocolGuid                              = { 0xbb34a29d, 0x0d3c, 0x43c9, { 0x8c, 0xc7, 0x64, 0x73, 0x80, 0x24, 0xd6, 0x57 } }
  gNVIDIAConfigurationManagerDataProtocolGuid           = { 0x1a8fd893, 0x4752, 0x40b9, { 0x9b, 0xc7, 0x75, 0x94, 0x04, 0xff, 0xcd, 0xff } }
  gNVIDIAConfigurationManagerDataObjectGuid             = { 0xac9d2c92, 0xd226, 0x469d, { 0x9a, 0xb4, 0x9f, 0x74, 0x91, 0xaa, 0x57, 0xcb } }
  gNVIDIAConfigurationManagerTokenProtocolGuid          = { 0xc41ff515, 0x67cf, 0x464c, { 0x87, 0xae, 0xc9, 0xc9, 0xbc, 0x97, 0x2d, 0xee } }
  gNVIDIAPciConfigurationDataProtocolGuid               = { 0xa1c086ea, 0x3b51, 0x4575, { 0xb1, 0x78, 0x0e, 0xb9, 0x0f, 0x5c, 0x69, 0xb5 } }
  gNVIDIATegraP2UProtocolGuid                           = { 0x3f9c6949, 0x817a, 0x45f7, { 0xb9, 0xb5, 0x9c, 0x94, 0x83, 0xee, 0xa0, 0x9e } }
  gNVIDIAUsbFwProtocolGuid                              = { 0xed3b027b, 0x201f, 0x4fe5, { 0xa1, 0x98, 0x42, 0xa0, 0xcf, 0xbf, 0x7f, 0x2e } }
  gNVIDIAStandaloneMmUnavailableGuid                    = { 0x1a2b1790, 0xe50c, 0x4b4c, { 0x85, 0x1b, 0x40, 0x6d, 0xc5, 0x8f, 0xa3, 0xbd } }
  gNVIDIATestGraphicsOutputProtocolGuid                 = { 0xe95a6ab5, 0x9271, 0x4f92, { 0x86, 0xf1, 0x69, 0x9c, 0xf6, 0xa6, 0x61, 0x60 } }
  gNVIDIAGraphicsOutputForceBltOnlyProtocolGuid         = { 0x2492d226, 0x888a, 0x46ae, { 0xa5, 0x7b, 0xfb, 0xbb, 0x8b, 0xfc, 0x85, 0x9a } }
  gNVIDIAI2cExpanderGpioProtocolGuid                    = { 0xbd2ead74, 0x57de, 0x4c9f, { 0x9a, 0x95, 0x53, 0x1e, 0x04, 0x7d, 0x61, 0xbc } }
  gNVIDIAI2cExpanderPlatformGpioProtocolGuid            = { 0x122f15f3, 0x5810, 0x42fd, { 0x8b, 0xcb, 0xad, 0x76, 0x00, 0xcb, 0x63, 0x54 } }
  gNVIDIAFwPartitionProtocolGuid                        = { 0x52771b87, 0x204a, 0x4d7b, { 0xab, 0x5c, 0xbe, 0xf8, 0x70, 0x1e, 0x84, 0x16 } }
  gNVIDIABrBctUpdateProtocolGuid                        = { 0xd341b73b, 0xd989, 0x4df3, { 0xa7, 0xcb, 0xb5, 0xfc, 0xe3, 0xb8, 0x92, 0xfc } }
  gNVIDIAFwImageProtocolGuid                            = { 0xd836a4a8, 0xdb25, 0x44a7, { 0x9a, 0x3c, 0x9d, 0xb3, 0xd1, 0xb0, 0x23, 0x04 } }
  gNVIDIACapsuleUpdatePolicyProtocolGuid                = { 0xe44d080b, 0x87f1, 0x463d, { 0xae, 0x23, 0x19, 0x38, 0x07, 0xa0, 0x3a, 0x5c } }
  gNVIDIAPcieControllerInitCompleteProtocolGuid         = { 0xe86bf035, 0xeeaf, 0x43b8, { 0xaa, 0x6b, 0x2e, 0x2b, 0xa8, 0xd6, 0x05, 0x32 } }
  gNVIDIAPcieGenericControllerInitCompleteProtocolGuid  = { 0xbca0def8, 0x7dd1, 0x4547, { 0x92, 0x59, 0x2a, 0x62, 0x39, 0xc8, 0x1e, 0xf7 } }
  gNVIDIARasNsCommPcieDpcDataProtocolGuid               = { 0x97dafc36, 0xc3bc, 0x427e, { 0xa9, 0xf4, 0x71, 0xcd, 0x3f, 0xba, 0x61, 0x95 } }
  gNVIDIAPinControlProtocolGuid                         = { 0x1f4054ed, 0xfb5b, 0x43a3, { 0xae, 0xe6, 0x10, 0xea, 0x43, 0x39, 0xb6, 0x2a } }
  gNVIDIASubPinControlProtocolGuid                      = { 0x13fcda23, 0x1119, 0x4797, { 0xad, 0xed, 0x5a, 0xb4, 0xfe, 0x4c, 0x33, 0x1e } }
  gNVIDIABootChainProtocolGuid                          = { 0xbbed2514, 0x140b, 0x4176, { 0xa8, 0xf6, 0x51, 0x35, 0x8e, 0xbb, 0x21, 0xdf } }
  gNVIDIATegraI2cInitCompleteProtocolGuid               = { 0xe7ebaff7, 0x3000, 0x4c79, { 0xa9, 0x2b, 0x8a, 0x4f, 0x63, 0x7a, 0xe3, 0x43 } }
  gNVIDIAIpmiBlobTransferProtocolGuid                   = { 0x05837c75, 0x1d65, 0x468b, { 0xb1, 0xc2, 0x81, 0xaf, 0x9a, 0x31, 0x5b, 0x2c } }
  gNVIDIATegraCpuFrequencyProtocolGuid                  = { 0xa20bb97e, 0x4de7, 0x426e, { 0xac, 0xd6, 0x3a, 0x5e, 0xaa, 0x6a, 0xd6, 0xc5 } }
  gEfiApeiGetErrorSourcesGuid                           = { 0xb5aabe64, 0xf09a, 0x4b94, { 0x8e, 0xfa, 0x2e, 0x23, 0x4d, 0x00, 0x6d, 0x3d } }
  gEfiApeiSetTimeOfDayGuid                              = { 0x44a430a2, 0xa3e3, 0x11ed, { 0xb4, 0x79, 0x00, 0x50, 0x56, 0x8f, 0x46, 0x25 } }
  gNVIDIAApeiSetRasFwFlag                               = { 0xde96487c, 0xec70, 0x11ee, { 0x8e, 0x33, 0x75, 0x48, 0x78, 0x38, 0xa9, 0x0f } }
  gNVIDIANorFlashDiceProtocolGuid                       = { 0xaf0e348c, 0x0e2b, 0x4fa6, { 0xba, 0xaf, 0x89, 0xe6, 0xc8, 0xbd, 0xdb, 0x5f } }
  gNVIDIATpm2ProtocolGuid                               = { 0x5fa7d7ca, 0x4b3f, 0x11ed, { 0xa2, 0xef, 0x6b, 0x88, 0x75, 0xf0, 0x98, 0x2d } }
  gNVIDIAMctpProtocolGuid                               = { 0x22dfe80e, 0x712f, 0x4c6c, { 0x91, 0xd7, 0xa6, 0x15, 0xd7, 0xce, 0xb4, 0x1d } }
  gNVIDIASocketIdProtocolGuid                           = { 0x40930d29, 0x595c, 0x4588, { 0xb6, 0x92, 0x16, 0xe7, 0x4a, 0x5b, 0x3c, 0x75 } }
  gNVIDIASequentialStorageGuid                          = { 0x80be536e, 0x356a, 0x43c5, { 0xa7, 0x25, 0x7e, 0x2f, 0x58, 0x05, 0xb7, 0xb8 } }
  gNVIDIAErotBootCompleteProtocolGuid                   = { 0x9de90cbb, 0x2b4c, 0x45ac, { 0x85, 0x77, 0x63, 0x20, 0xef, 0x8c, 0xec, 0x71 } }
  gNVIDIABdsDeviceConnectCompleteGuid                   = { 0x74fc336f, 0xf335, 0x45b7, { 0x8e, 0x7a, 0xec, 0xf3, 0xb0, 0x18, 0xfb, 0x4c } }
  gNVIDIAUsbNicInfoProtocolGuid                         = { 0x5f86dc71, 0x9d97, 0x4f20, { 0x8e, 0x1f, 0xdb, 0x96, 0xa7, 0x11, 0x79, 0x65 } }
  gNVIDIAUphyConfigurationCompleteGuid                  = { 0x6e6f5deb, 0x2fb4, 0x4c11, { 0x8c, 0x86, 0x1a, 0xce, 0x6b, 0x17, 0xe5, 0xf4 } }
  gNVIDIAHostInterfaceReadyProtocolGuid                 = { 0x554de793, 0xd07b, 0x4420, { 0xa6, 0x84, 0x0a, 0x80, 0x5c, 0x9c, 0x87, 0x8e } }
  gNVIDIACmetStorageGuid                                = { 0x6eddd254, 0x16e9, 0x4406, { 0xa7, 0xee, 0xd9, 0xd0, 0xef, 0x6a, 0x6d, 0xff } }
  gNVIDIAUserAuthenticationProtocolGuid                 = { 0xa1e191fa, 0xc8fb, 0x11ed, { 0x91, 0x24, 0x5f, 0xe4, 0xa5, 0x8e, 0x1e, 0xd6 } }
  gNVIDIAErrorSerializationProtocolGuid                 = { 0xdbe0b12b, 0x72da, 0x4bf6, { 0x95, 0xc1, 0x0b, 0xb2, 0x43, 0xb8, 0x8e, 0xb6 } }
  gNVIDIAOemPartitionProtocolGuid                       = { 0x938d8a98, 0x3f8e, 0x4013, { 0x88, 0x46, 0x1a, 0x8f, 0xff, 0x57, 0x5c, 0x63 } }
  gNVIDIAIsPresiliconDeviceGuid                         = { 0x198bd2a1, 0x1e2c, 0x4f6c, { 0xac, 0x94, 0xa6, 0x6c, 0x93, 0x2b, 0x89, 0x0e } }
  gNVIDIAIsSiliconDeviceGuid                            = { 0xb5799a3d, 0x0fd1, 0x46d4, { 0xb7, 0x29, 0xfe, 0x34, 0xce, 0xa5, 0x49, 0x85 } }
  gEfiNVIDIAGpuDSDAMLGenerationProtocolGuid             = { 0x0078c06c, 0xe263, 0x4639, { 0xb8, 0xa6, 0x79, 0x7e, 0xe9, 0x16, 0x07, 0x72 } }
  gEfiNVIDIAGpuFirmwareBootCompleteGuid                 = { 0x5b59ce70, 0xaea3, 0x4eba, { 0xa2, 0xc3, 0x95, 0xe4, 0x4d, 0x8d, 0x4e, 0xae } }
  gEfiNVIDIAGpuFirmwareC2CInitCompleteGuid              = { 0x7d26ecde, 0xb6c3, 0x401d, { 0xa7, 0xaa, 0x7a, 0x24, 0xb8, 0x40, 0xda, 0x52 } }
  gNVIDIAFtpmPresentProtocolGuid                        = { 0x0d427a37, 0xc4fb, 0x41fb, { 0x92, 0x37, 0xa7, 0x66, 0x98, 0x2a, 0xf3, 0xba } }
  ## Include/Protocol/Threading.h
  gEfiThreadingProtocolGuid                             = { 0x99fc2222, 0x5c4d, 0x472b, { 0x84, 0xf9, 0x9f, 0xda, 0xf8, 0xe9, 0x9c, 0x03 } }
  gNVIDIAMemoryTestConfig                               = { 0x78bb2dfe, 0xe17b, 0x4ca1, { 0x9b, 0x82, 0xa3, 0x1e, 0x33, 0xf1, 0x1f, 0xac } }
  gNVIDIAAsyncDriverStatusProtocol                      = { 0xdf28c8db, 0x28f0, 0x4325, { 0x88, 0x6a, 0x93, 0x6e, 0x92, 0x17, 0xc5, 0xc1 } }
  gNVIDIAVarIntGuid                                     = { 0x49dae0b5, 0x7994, 0x4a9f, { 0xa1, 0x29, 0x3d, 0x19, 0x89, 0x8e, 0xe9, 0x13 } }
  gServerPowerControlProtocolGuid                       = { 0x28d13f81, 0xd621, 0x41f6, { 0x9f, 0x24, 0xd0, 0xd2, 0x78, 0x05, 0xa2, 0xc9 } }
  gNVIDIASavedCapsuleProtocolGuid                       = { 0xddac6297, 0x19fa, 0x46de, { 0x8b, 0xb2, 0xcc, 0xdd, 0x94, 0x12, 0x25, 0xbe } }
  gNVIDIAMmPrmCommunication2ProtocolGuid                = { 0xeed22a87, 0x87f5, 0x4211, { 0xba, 0xea, 0x9e, 0xd5, 0xbe, 0xaa, 0xd3, 0x3d } }
  gNVIDIALoadfileKernelArgsProtocol                     = { 0x2615573c, 0xc2b4, 0x4d81, { 0x86, 0xe0, 0xf4, 0xd6, 0x2e, 0x65, 0xc1, 0x01 } }
  gNVIDIABootConfigUpdateProtocol                       = { 0xd508289c, 0xf9b1, 0xe94c, { 0xb8, 0x6b, 0x1b, 0x65, 0xf5, 0x85, 0x68, 0x42 } }
  gNVIDIAL4TLauncherSupportProtocol                     = { 0xb1f8c13e, 0x5fd8, 0x424f, { 0x97, 0x33, 0x84, 0xc6, 0x97, 0x1c, 0xdb, 0xa2 } }
  gNVIDIAPlatformKernelArgsProtocolGuid                 = { 0x41330bd9, 0xcac1, 0x4dd4, { 0x93, 0x64, 0x31, 0x61, 0x39, 0xd0, 0xec, 0xf4 } }
  gNVIDIASmmuV3ProtocolGuid                             = { 0xF6C64F84, 0x702C, 0x4BE7, { 0xA4, 0x1B, 0x64, 0xD5, 0xB5, 0x5F, 0x10, 0x1C } }
  gNVIDIASmmuV3InitCompleteProtocolGuid                 = { 0x3b8cfe29, 0xd8cf, 0x485b, { 0x8c, 0xa7, 0xc1, 0xb9, 0x01, 0xa5, 0x64, 0x18 } }

[PcdsFixedAtBuild.common]
#Tegra Combined UART mailboxes
  gNVIDIATokenSpaceGuid.PcdTegraCombinedUartRxMailbox|0x0|UINT64|0x00000001
  gNVIDIATokenSpaceGuid.PcdTegraCombinedUartTxMailbox|0x0|UINT64|0x00000002

#Tegra SPI FLASH Block Protocols Available
  gNVIDIATokenSpaceGuid.PcdTegraNorBlockProtocols|FALSE|BOOLEAN|0x00000003

#Timeout in microseconds in for bpmp response, 0 for infinite
  gNVIDIATokenSpaceGuid.PcdBpmpResponseTimeout|0|UINT32|0x00000008

#Name of UEFI variables GPT partition
  gNVIDIATokenSpaceGuid.PcdUEFIVariablesPartitionName|L"uefi_variables"|VOID*|0x00000009

#Tegra UART OEM Table ID
  gNVIDIATokenSpaceGuid.PcdAcpiTegraUartOemTableId|'TEGRAUAR'|UINT64|0x0000000A

#Size of optional signed image header
  gNVIDIATokenSpaceGuid.PcdSignedImageHeaderSize|0x2000|UINT32|0x0000000B

#Base address of MISCREG aperture.
  gNVIDIATokenSpaceGuid.PcdMiscRegBaseAddress|0x00100000|UINT64|0x0000000F

#Name of Kernel DTB partition
  gNVIDIATokenSpaceGuid.PcdKernelDtbPartitionName|L"kernel-dtb"|VOID*|0x00000016

#TH500 Sbsa UART Base
  gNVIDIATokenSpaceGuid.PcdSbsaUartBaseTH500|0x0C280000|UINT64|0x0000001F

#Tegra UEFI version and build date
  gNVIDIATokenSpaceGuid.PcdUefiDateTimeBuiltString|L""|VOID*|0x000000A2
  gNVIDIATokenSpaceGuid.PcdUefiVersionString|L""|VOID*|0x000000A3

# Tegra Architectural Timer Frequency
  gNVIDIATokenSpaceGuid.PcdTegraArchTimerFreqInHz|31250000|UINT32|0x00000024

# Supported bitmasks for runtime functions
## Bitmask of supported runtime services<BR>
  #  BIT0  - GetTime
  #  BIT1  - SetTime
  #  BIT2  - GetWakeupTime
  #  BIT3  - SetWakeupTime
  #  BIT4  - GetVariable
  #  BIT5  - GetNextVariableName
  #  BIT6  - SetVariable
  #  BIT7  - SetVirtualAddressMap
  #  BIT8  - ConvertPointer
  #  BIT9  - GetNextHighMonotonicCount
  #  BIT10 - ResetSystem
  #  BIT11 - UpdateCapsule
  #  BIT12 - QueryCapsuleCapabilites
  #  BIT13 - QueryVariableInfo
  # @Prompt Supported Runtime services bitmask.
  gNVIDIATokenSpaceGuid.PcdNoVariableRtProperties|0x25B0|UINT32|0x00000030
  gNVIDIATokenSpaceGuid.PcdVariableRtProperties|0x27F3|UINT32|0x00000031

# Tegra Print Internal Banner
  gNVIDIATokenSpaceGuid.PcdTegraPrintInternalBanner|FALSE|BOOLEAN|0x00000033

# Null-terminated Unicode string that describes the platform family name.
  gNVIDIATokenSpaceGuid.PcdPlatformFamilyName|L""|VOID*|0x00000037

# Tegra MCE ARI Aperture Base Address
  gNVIDIATokenSpaceGuid.PcdTegraMceAriApertureBaseAddress|0x0E100000|UINT64|0x0000003A

# Expose CCPLEX_INTERWORLD_SHMEM Carveout To OS
  gNVIDIATokenSpaceGuid.PcdExposeCcplexInterworldShmem|FALSE|BOOLEAN|0x0000003D

# Tegra Boot Chain Selection Register Address T234
  gNVIDIATokenSpaceGuid.PcdBootChainRegisterBaseAddressT234|0x0C3903CC|UINT64|0x0000003E

# Tegra BootLoader Scratch Register Address T234
  gNVIDIATokenSpaceGuid.PcdBootLoaderRegisterBaseAddressT234|0x0C3903A4|UINT64|0x0000002A

# Tegra Rootfs Status Register Address T234
  gNVIDIATokenSpaceGuid.PcdRootfsRegisterBaseAddressT234|0x0C3903A8|UINT64|0x0000006A

# Name of kernel GPT partition
  gNVIDIATokenSpaceGuid.PcdKernelPartitionName|L"kernel"|VOID*|0x0000003F

# Indicates the default timeouts for reset after an assert in seconds.
  gNVIDIATokenSpaceGuid.PcdAssertResetTimeoutValue|0|UINT32|0x00000040

#Configuration Manager Objects.
  gNVIDIATokenSpaceGuid.PcdConfigMgrObjMax|0x400|UINT32|0x00000042

#Signature of optional signed image header
  gNVIDIATokenSpaceGuid.PcdSignedImageHeaderSignature|"NVDA"|VOID*|0x00000055

# Fmp image attribute bits:
#   IMAGE_ATTRIBUTE_IMAGE_UPDATABLE         0x01
#   IMAGE_ATTRIBUTE_RESET_REQUIRED          0x02
#   IMAGE_ATTRIBUTE_AUTHENTICATION_REQUIRED 0x04
#   IMAGE_ATTRIBUTE_IN_USE                  0x08
#   IMAGE_ATTRIBUTE_UEFI_IMAGE              0x10
#   IMAGE_ATTRIBUTE_DEPENDENCY              0x20
  gNVIDIATokenSpaceGuid.PcdFmpImageAttributesSupported|0xf|UINT64|0x00000056
  gNVIDIATokenSpaceGuid.PcdFmpImageAttributesSetting|0xf|UINT64|0x00000057

#Name of Recovery Kernel DTB partition
  gNVIDIATokenSpaceGuid.PcdRecoveryKernelDtbPartitionName|L"recovery-dtb"|VOID*|0x00000066
#Firmware Prefix printed during hafnium boot
  gNVIDIATokenSpaceGuid.PcdFirmwareNickNameString|L""|VOID*|0x00000073
  gNVIDIATokenSpaceGuid.PcdFirmwareFullNameString|L""|VOID*|0x00000072

#L4T Configuration support
  gNVIDIATokenSpaceGuid.PcdL4TConfigurationSupport|FALSE|BOOLEAN|0x00000100

#SMBIOS Data
  #Type00 Data
  #  Enable/Disable the SMBIOS Type00 Bios characteristics.
  #  This Structured PCD is associated with MISC_BIOS_CHARACTERISTICS
  #  structure that is defined in Include/IndustryStandard/SmBios.h
  gArmTokenSpaceGuid.PcdBiosCharacteristics|{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}|MISC_BIOS_CHARACTERISTICS|0x30000077 {
    <HeaderFiles>
      IndustryStandard/SmBios.h
  }
  # This PCD is associated with the BIOSCharacteristicsExtensionBytes[2] field
  # in the SMBIOS Type00 structure defined in Include/IndustryStandard/SmBios.h
  gArmTokenSpaceGuid.PcdBiosCharacteristicsExtension|0x0000|UINT16|0x30000078

# Use FAST reads in S QSPI controllers
  gNVIDIATokenSpaceGuid.PcdSecureQspiUseFastRead|TRUE|BOOLEAN|0x00000099

# Floorsweeping runtime variable exposure
# EXPOSE_PCIE_FLOORSWEEPING_VARIABLE          0x0001
# EXPOSE_NVML_FLOORSWEEPING_VARIABLE          0x0002
# EXPOSE_C2C_FLOORSWEEPING_VARIABLE           0x0004
# EXPOSE_HALF_CHIP_DISABLED_VARIABLE          0x0008
# EXPOSE_MCF_CHANNEL_DISABLED_VARIABLE        0x0010
# EXPOSE_UPHY_LANE_OWNERSHIP_VARAIBLE         0x0020
# EXPOSE_CCPLEX_CORE_DISABLED_VARIABLE        0x0040
# EXPOSE_CCPLEX_MCF_BRIDGE_DISABLED_VARIABLE  0x0080
# EXPOSE_CCPLEX_SOC_BRIDGE_DISABLED_VARIABLE  0x0100
# EXPOSE_CCPLEX_CSN_DISABLED_VARIABLE         0x0200
# EXPOSE_SCF_CACHE_DISABLED_VARIABLE          0x0400
  gNVIDIATokenSpaceGuid.PcdFloorsweepingRuntimeVariables|0x7FF|UINT32|0x00000102

# Retry tunables for MM Communicate
## PcdMmMaxRetries - Max Retries (Default:3)
  gNVIDIATokenSpaceGuid.PcdMmCommMaxRetries|0x03|UINT8|0x00000108
## PcdMmCommRetryBackOffUs - Backoff in us between retries (Default:0x7A120 (500 ms))
  gNVIDIATokenSpaceGuid.PcdMmCommRetryBackOffUs|0x7A120|UINT64|0x00000109

  #Time in minutes to register boot watchdog (DXE->ReadyToBoot), 0 to disable
  gNVIDIATokenSpaceGuid.PcdBootWatchdogTime|0|UINT16|0x00000110

  #Size of Buffer used to communicate with fTPM TA in OP-TEE
  gNVIDIATokenSpaceGuid.PcdFtpmShmSize|0|UINT64|0x000010D

# PEI memory usage, expected needs of PEI memory in the HOB list
# set to 0 to skip memory testing
  gNVIDIATokenSpaceGuid.PcdExpectedPeiMemoryUsage|0|UINT64|0x00000111

  #Application to launch if single boot is supported
  gNVIDIATokenSpaceGuid.PcdSingleBootApplicationGuid|{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}|VOID*|0x00010001

  #Application to launch when RCM boot occurs
  gNVIDIATokenSpaceGuid.PcdRcmBootApplicationGuid|{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}|VOID*|0x00010002

  #Option to boot android image
  gNVIDIATokenSpaceGuid.PcdBootAndroidImage|FALSE|BOOLEAN|0x00000114

  #Build Epoch
  gNVIDIATokenSpaceGuid.PcdBuildEpoch|0|UINT64|0x00000119

#Force system to use single passive thermal zone
  gNVIDIATokenSpaceGuid.PcdUseSinglePassiveThermalZone|FALSE|BOOLEAN|0x00000106

# Capsule partition in data flash support
  gNVIDIATokenSpaceGuid.PcdCapsulePartitionEnabled|FALSE|BOOLEAN|0x0000012A
  gNVIDIATokenSpaceGuid.PcdCapsulePartitionSize|0x1900000|UINT64|0x0000012B

# UEFI hex version for FMP bolb library
  gNVIDIATokenSpaceGuid.PcdUefiHexVersionNumber|L""|VOID*|0x0000012C

  ## The maximum number of boot options supported.
  gNVIDIATokenSpaceGuid.PcdMaximumBootOptions|0xFF|UINT16|0x0000012D

  ## Mask used to limit debug output, used to filter out debug messages when enabled with menu.
  gNVIDIATokenSpaceGuid.PcdDebugOutputMask|0xFFFFFFFF|UINT32|0x0000012F

  ## Use to determine if the internal nvidia GOP driver is supported.
  gNVIDIATokenSpaceGuid.PcdNvGopSupported|FALSE|BOOLEAN|0x00000132

#CCPLEX NS INITIATOR ID
  gNVIDIATokenSpaceGuid.PcdCcplexNsInitiatorId|17|UINT32|0x00000164

#Logo scaling/placement factors
  #Logo to Screen Ratio in 1000ths
  gNVIDIATokenSpaceGuid.PcdLogoScreenRatio|400|UINT16|0x00000165
  #Center of Logo Y Position in 1000ths
  gNVIDIATokenSpaceGuid.PcdLogoCenterY|382|UINT16|0x00000166

#Boot manager colors
  #Foreground color - Light gray
  #Background color - Black
  gNVIDIATokenSpaceGuid.PcdBootManagerConOutAttributes|0x07|UINT16|0x00000167

#Tegra UTC UART address
  gNVIDIATokenSpaceGuid.PcdTegraUtcUartAddress|0x0|UINT64|0x00000169

[PcdsFeatureFlag]
#OPTEE presence
  gNVIDIATokenSpaceGuid.PcdOpteePresent|FALSE|BOOLEAN|0x00000067

#QuickBoot Support
  gNVIDIATokenSpaceGuid.PcdQuickBootSupported|TRUE|BOOLEAN|0x00000101

#User Authentication for BIOS Setup Menu feature - This PCD specifies whether StatusCode is reported via USB3 Serial port.
  gUserAuthFeaturePkgTokenSpaceGuid.PcdUserAuthenticationFeatureEnable|FALSE|BOOLEAN|0x00000103

#Debug HII Menu support
  gNVIDIATokenSpaceGuid.PcdDebugMenuSupport|FALSE|BOOLEAN|0x00000105

#Redfish Support
  gNVIDIATokenSpaceGuid.PcdRedfishSupported|FALSE|BOOLEAN|0x00000107

#Single Launch Application
  gNVIDIATokenSpaceGuid.PcdSingleBootSupport|FALSE|BOOLEAN|0x00010000

#No Corrected Errors in HEST ACPI
  gNVIDIATokenSpaceGuid.PcdNoCorrectedErrorsInHest|FALSE|BOOLEAN|0x00000116

#SPE Overflow Interrupt
  gNVIDIATokenSpaceGuid.PcdSpeOverflowIntrNum|0x15|UINT32|0x00000117

#Variable Store Integrity
  gNVIDIATokenSpaceGuid.PcdVarStoreIntegritySupported|FALSE|BOOLEAN|0x00000118

#Memory test supported
    gNVIDIATokenSpaceGuid.PcdMemoryTestsSupported|FALSE|BOOLEAN|0x0000011A

#ASSERT and halt boot if VarStore Integrity check fails.
  gNVIDIATokenSpaceGuid.PcdAssertOnVarStoreIntegrityCheckFail|FALSE|BOOLEAN|0x00000129

[PcdsDynamic.common]
#Force disable coherent DMA in SDHCi.
  gNVIDIATokenSpaceGuid.PcdSdhciCoherentDMADisable|FALSE|BOOLEAN|0x0000000C

#Force disable high speed modes in SDHCi.
  gNVIDIATokenSpaceGuid.PcdSdhciHighSpeedDisable|TRUE|BOOLEAN|0x0000000E

#Force disable ADMA2 in SDHCi.
  gNVIDIATokenSpaceGuid.PcdSdhciAdma2Disable|FALSE|BOOLEAN|0x00000010

#Force Clear of HC2 register in SDHCi.
  gNVIDIATokenSpaceGuid.PcdSdhciClearHc2RegOnExit|FALSE|BOOLEAN|0x00000011

#Explicit PCIe Controller Enable
  gNVIDIATokenSpaceGuid.PcdBPMPPCIeControllerEnable|FALSE|BOOLEAN|0x00000017

#PCIe Segment Base Address
  gNVIDIATokenSpaceGuid.PcdPciConfigurationSpaceBaseAddress|0x0|UINT64|0x00000018

#Tegra Use Production USB Fw
  gNVIDIATokenSpaceGuid.PcdTegraUseProdUsbFw|TRUE|BOOLEAN|0x00000027

#Default to make PCIe entry void in ACPI table
#Need two as the Platform Init Library is invoked prior to variable services being available
  gNVIDIATokenSpaceGuid.PcdPcieResourceConfigNeeded|0x00|UINT8|0x0000002B
  gNVIDIATokenSpaceGuid.PcdPcieEntryInAcpiConfigNeeded|0x00|UINT8|0x0000002C
  gNVIDIATokenSpaceGuid.PcdPcieEntryInAcpi|0x00|UINT8|0x0000002F

#Option to enable/disable quickboot
  gNVIDIATokenSpaceGuid.PcdQuickBootEnabled|0x01|UINT8|0x0000002D

#Option to support virtual RTC
  gNVIDIATokenSpaceGuid.PcdVirtualRTC|FALSE|BOOLEAN|0x0000002E

#Option to configure serial port
##Supported UART Type Values
  #0   - SBSA UART
  #255 - Undefined
  gNVIDIATokenSpaceGuid.PcdSerialTypeConfig|0xFF|UINT8|0x00000038
##Supported UART Port Values
  #0   - SPCR SBSA UART
  #1   - DBG2 SBSA UART
  #255 - Disabled
  gNVIDIATokenSpaceGuid.PcdSerialPortConfig|0xFF|UINT8|0x00000039

#Rcm Kernel Base and Size
  gNVIDIATokenSpaceGuid.PcdRcmKernelBase|0x0|UINT64|0x00000035
  gNVIDIATokenSpaceGuid.PcdRcmKernelSize|0x0|UINT64|0x00000036

#Cpu configuration
  gNVIDIATokenSpaceGuid.PcdTegraMaxSockets|1|UINT32|0x0000005F

#CPU GPU domain distance information
  gNVIDIATokenSpaceGuid.PcdCpuToRemoteCpuDistance|0x0|UINT32|0x00000074
  gNVIDIATokenSpaceGuid.PcdGpuToRemoteGpuDistance|0x0|UINT32|0x00000075
  gNVIDIATokenSpaceGuid.PcdCpuToLocalHbmDistance|0x0|UINT32|0x00000076
  gNVIDIATokenSpaceGuid.PcdCpuToRemoteHbmDistance|0x0|UINT32|0x00000077
  gNVIDIATokenSpaceGuid.PcdLocalHbmToCpuDistance|0x0|UINT32|0x00000078
  gNVIDIATokenSpaceGuid.PcdRemoteHbmToCpuDistance|0x0|UINT32|0x00000079
  gNVIDIATokenSpaceGuid.PcdHbmToLocalCpuDistance|0x0|UINT32|0x0000007A
  gNVIDIATokenSpaceGuid.PcdHbmToRemoteCpuDistance|0x0|UINT32|0x0000007B
  gNVIDIATokenSpaceGuid.PcdGpuToLocalHbmDistance|0x0|UINT32|0x0000007C
  gNVIDIATokenSpaceGuid.PcdGpuToRemoteHbmDistance|0x0|UINT32|0x0000007D
  gNVIDIATokenSpaceGuid.PcdHbmToLocalGpuDistance|0x0|UINT32|0x0000007E
  gNVIDIATokenSpaceGuid.PcdHbmToRemoteGpuDistance|0x0|UINT32|0x0000007F
  gNVIDIATokenSpaceGuid.PcdLocalDistance|10|UINT32|0x000000A0
  gNVIDIATokenSpaceGuid.PcdUnreachableDistance|0xFF|UINT32|0x000000A1

#CPU GPU domain bandwidth and latency information
  gNVIDIATokenSpaceGuid.PcdCpuToLocalCpuReadLatency|0x0|UINT32|0x00000081
  gNVIDIATokenSpaceGuid.PcdCpuToLocalCpuWriteLatency|0x0|UINT32|0x00000082
  gNVIDIATokenSpaceGuid.PcdCpuToLocalCpuAccessBandwidth|0x0|UINT32|0x00000083
  gNVIDIATokenSpaceGuid.PcdCpuToRemoteCpuReadLatency|0x0|UINT32|0x00000084
  gNVIDIATokenSpaceGuid.PcdCpuToRemoteCpuWriteLatency|0x0|UINT32|0x00000085
  gNVIDIATokenSpaceGuid.PcdCpuToRemoteCpuAccessBandwidth|0x0|UINT32|0x00000086
  gNVIDIATokenSpaceGuid.PcdCpuToLocalHbmReadLatency|0x0|UINT32|0x00000087
  gNVIDIATokenSpaceGuid.PcdCpuToLocalHbmWriteLatency|0x0|UINT32|0x00000088
  gNVIDIATokenSpaceGuid.PcdCpuToLocalHbmAccessBandwidth|0x0|UINT32|0x00000089
  gNVIDIATokenSpaceGuid.PcdCpuToRemoteHbmReadLatency|0x0|UINT32|0x0000008A
  gNVIDIATokenSpaceGuid.PcdCpuToRemoteHbmWriteLatency|0x0|UINT32|0x0000008B
  gNVIDIATokenSpaceGuid.PcdCpuToRemoteHbmAccessBandwidth|0x0|UINT32|0x0000008C
  gNVIDIATokenSpaceGuid.PcdGpuToLocalHbmReadLatency|0x0|UINT32|0x0000008D
  gNVIDIATokenSpaceGuid.PcdGpuToLocalHbmWriteLatency|0x0|UINT32|0x0000008E
  gNVIDIATokenSpaceGuid.PcdGpuToLocalHbmAccessBandwidth|0x0|UINT32|0x0000008F
  gNVIDIATokenSpaceGuid.PcdGpuToLocalCpuReadLatency|0x0|UINT32|0x00000090
  gNVIDIATokenSpaceGuid.PcdGpuToLocalCpuWriteLatency|0x0|UINT32|0x00000091
  gNVIDIATokenSpaceGuid.PcdGpuToLocalCpuAccessBandwidth|0x0|UINT32|0x00000092
  gNVIDIATokenSpaceGuid.PcdGpuToRemoteCpuReadLatency|0x0|UINT32|0x00000093
  gNVIDIATokenSpaceGuid.PcdGpuToRemoteCpuWriteLatency|0x0|UINT32|0x00000094
  gNVIDIATokenSpaceGuid.PcdGpuToRemoteHbmAccessBandwidth|0x0|UINT32|0x00000095
  gNVIDIATokenSpaceGuid.PcdGpuToRemoteHbmReadLatency|0x0|UINT32|0x00000096
  gNVIDIATokenSpaceGuid.PcdGpuToRemoteHbmWriteLatency|0x0|UINT32|0x00000097
  gNVIDIATokenSpaceGuid.PcdGpuToRemoteCpuAccessBandwidth|0x0|UINT32|0x00000098

#Interrupts
  gNVIDIATokenSpaceGuid.PcdArmArchVirtMaintenanceIntrNum|0x19|UINT32|0x0000005C

#SPI clock frequency.
  gNVIDIATokenSpaceGuid.PcdSpiClockFrequency|10000000|UINT32|0x00000041

#OS chain A status
  #0   - Normal
  #255 - Unbootable
  gNVIDIATokenSpaceGuid.PcdOsChainStatusA|0x0|UINT32|0x00000070

#OS chain B status
  #0   - Normal
  #255 - Unbootable
  gNVIDIATokenSpaceGuid.PcdOsChainStatusB|0x0|UINT32|0x00000071

#L4T default boot mode
  #0   - Boot using grub
  #1   - Boot using extlinux via filesystem
  #2   - Boot using boot.img
  #3   - Boot recovery image
  #255 - Use application default
  gNVIDIATokenSpaceGuid.PcdL4TDefaultBootMode|0xFF|UINT32|0x00000044

#SMBIOS Data
  #Type02 Data
  gNVIDIATokenSpaceGuid.PcdBoardChassisLocation|L""|VOID*|0x00000051
  gNVIDIATokenSpaceGuid.PcdBoardVersion|L""|VOID*|0x00000050
  gNVIDIATokenSpaceGuid.PcdBoardManufacturer|L""|VOID*|0x00000052
  gNVIDIATokenSpaceGuid.PcdBoardProductName|L""|VOID*|0x0000005E
  #Type01 Table Data
  gNVIDIATokenSpaceGuid.PcdSystemSerialNum|L""|VOID*|0x0000004F
  gNVIDIATokenSpaceGuid.PcdSystemManufacturer|L""|VOID*|0x00000045
  gNVIDIATokenSpaceGuid.PcdSystemSku|L""|VOID*|0x00000046
  gNVIDIATokenSpaceGuid.PcdSystemFamilyType|L""|VOID*|0x00000047
  #Type03 Table Data
  gNVIDIATokenSpaceGuid.PcdType3Info|{0}|SMBIOS_TABLE_TYPE3|0x00000048 {
  <HeaderFiles>
    IndustryStandard/SmBios.h
  <Packages>
    MdePkg/MdePkg.dec
  }
  gNVIDIATokenSpaceGuid.PcdChassisSku|L""|VOID*|0x0000049
  gNVIDIATokenSpaceGuid.PcdChassisManufacturer|L""|VOID*|0x000004A
  gNVIDIATokenSpaceGuid.PcdChassisSerialNumber|L""|VOID*|0x000004B
  gNVIDIATokenSpaceGuid.PcdChassisAssetTag|L""|VOID*|0x000004C
  gNVIDIATokenSpaceGuid.PcdChassisVersion|L""|VOID*|0x000004D
  #Type32 Table Data
  gNVIDIATokenSpaceGuid.PcdType32Info|{0}|SMBIOS_TABLE_TYPE32|0x0000004E {
  <HeaderFiles>
    IndustryStandard/SmBios.h
  <Packages>
    MdePkg/MdePkg.dec
  }

#FwPartition and FwImage
  gNVIDIATokenSpaceGuid.PcdOverwriteActiveFwPartition|FALSE|BOOLEAN|0x00000053
  gNVIDIATokenSpaceGuid.PcdFwImageEnableBPartitions|TRUE|BOOLEAN|0x00000058
  gNVIDIATokenSpaceGuid.PcdPartitionNamesHaveSuffixes|FALSE|BOOLEAN|0x00000043

#BrBct config and options
  gNVIDIATokenSpaceGuid.PcdBrBctLogicalSlotSize|0x0|UINT32|0x00000054
  gNVIDIATokenSpaceGuid.PcdBrBctDataSize|0x0|UINT32|0x00000032
  gNVIDIATokenSpaceGuid.PcdBrBctVerifyUpdateBeforeWrite|TRUE|BOOLEAN|0x00000059
  gNVIDIATokenSpaceGuid.PcdBootChainIsMarkerBased|FALSE|BOOLEAN|0x000000BF

#Fmp options
  gNVIDIATokenSpaceGuid.PcdFmpSingleImageUpdate|FALSE|BOOLEAN|0x0000005A
  gNVIDIATokenSpaceGuid.PcdFmpWriteVerifyImage|TRUE|BOOLEAN|0x0000005B

#List of non-unique FMP system ImageTypeId's to generate warnings
  gNVIDIATokenSpaceGuid.PcdNonUniqueSystemFmpCapsuleImageTypeIdGuid|{0x0}|VOID*|0x000000A4

#Option to add new boot device at top or bottom of list
  gNVIDIATokenSpaceGuid.PcdNewDeviceHierarchy|0x01|UINT8|0x00000068

#Enable OS access to QSPI DTB
  gNVIDIATokenSpaceGuid.PcdAllowOsAccessQspi|FALSE|BOOLEAN|0x0000006B

#Enable STMM Secure Variable Store
  gNVIDIATokenSpaceGuid.PcdTegraStmmEnabled|TRUE|BOOLEAN|0x0000006C

#CPU is connected to RTC's primary I2C bus, and has full control of RTC
  gNVIDIATokenSpaceGuid.PcdCpuHasRtcControl|FALSE|BOOLEAN|0x0000006D

#The BlobId of SMBIOS Blob in BMC Phosphor Blob Transfer architecture
  gNVIDIATokenSpaceGuid.PcdBmcSmbiosBlobTransferId|"/smbios"|VOID*|0x0000006E

# GUID of the Boot Menu App
  gNVIDIATokenSpaceGuid.PcdBootMenuAppFile|{ 0xdc, 0x5b, 0xc2, 0xee, 0xf2, 0x67, 0x95, 0x4d, 0xb1, 0xd5, 0xf8, 0x1b, 0x20, 0x39, 0xd1, 0x1d }|VOID*|0x0001006b

# Progress report message during BDS wait
  gNVIDIATokenSpaceGuid.PcdBootManagerWaitMessage|L""|VOID*|0x0000006F

# Platform supports NS QSPI controllers
  gNVIDIATokenSpaceGuid.PcdNonSecureQspiAvailable|FALSE|BOOLEAN|0x00000080

# Option to select IPv4/IPv6 for IPMI network boot
  gNVIDIATokenSpaceGuid.PcdIpmiNetworkBootMode|0x00|UINT8|0x0000009a

#Option to enable/disable ACPI Timer
  gNVIDIATokenSpaceGuid.PcdAcpiTimerEnabled|0x00|UINT8|0x0000009b

#Option to enable/disable EFI FB for dGPU
  gNVIDIATokenSpaceGuid.PcdDgpuDtEfifbSupport|0x00|UINT8|0x0000009C

# Description of the Erst buffer
  gNVIDIATokenSpaceGuid.PcdErstBufferBase|0x0|UINT64|0x0000009D
  gNVIDIATokenSpaceGuid.PcdErstBufferSize|0x0|UINT64|0x0000009E

#Option to enable/disable Redfish Host Interface
  gNVIDIATokenSpaceGuid.PcdRedfishHostInterface|0x00|UINT8|0x0000009F

#Indicate whether initial console device registration should be done.
  gNVIDIATokenSpaceGuid.PcdDoInitialConsoleRegistration|TRUE|BOOLEAN|0x0000010A

#Memory test options
  gNVIDIATokenSpaceGuid.PcdMemoryTest|{0}|NVIDIA_MEMORY_TEST_OPTIONS|0x00000112 {
    <Packages>
      Silicon/NVIDIA/NVIDIA.dec
    <HeaderFiles>
      NVIDIAConfiguration.h
  }

#Option to enable/disable Embedded UEFI Shell
  gNVIDIATokenSpaceGuid.PcdUefiShellEnabled|0x01|UINT8|0x0000010B

#Option to configure the enabled PCIe NIC interface
  gNVIDIATokenSpaceGuid.PcdEnabledPcieNicTopology|{ 0x0, 0x0, 0x0, 0x0, 0x0 }|VOID*|0x0000010C

#Indicate whether TPM device is present and accessible on the system.
  gNVIDIATokenSpaceGuid.PcdTpmPresent|FALSE|BOOLEAN|0x0000010E

#Indicate whether TPM device is enabled or disabled.
  gNVIDIATokenSpaceGuid.PcdTpmEnable|FALSE|BOOLEAN|0x0000010F

#Option to boot board in recovery mode
  gNVIDIATokenSpaceGuid.PcdBoardRecoveryBoot|FALSE|BOOLEAN|0x00000113

#Specify UFS refclk freq from EDKII_UFS_CARD_REF_CLK_FREQ_ATTRIBUTE enum
  gNVIDIATokenSpaceGuid.PcdUfsCardRefClkFreq|0|UINT32|0x000000A6

#Enable UFS HS mode
  gNVIDIATokenSpaceGuid.PcdUfsEnableHighSpeed|TRUE|BOOLEAN|0x000000A8

#Override UFS max gear if non-zero
  gNVIDIATokenSpaceGuid.PcdUfsMaxGearOverride|0|UINT32|0x000000A9

#Specify UFS HClkDiv value (reset value is 0xcc)
  gNVIDIATokenSpaceGuid.PcdUfsHclkDiv|0xcc|UINT32|0x000000AA

#Specify UFS HS Series (RATE_A=1 RATE_B=2)
  gNVIDIATokenSpaceGuid.PcdUfsHsSeries|0x1|UINT32|0x000000AE

#Option to configure SOC display hand-off mode
  gNVIDIATokenSpaceGuid.PcdSocDisplayHandoffMode|0x00|UINT8|0x00000115

#Option to configure SOC display hand-off method
  gNVIDIATokenSpaceGuid.PcdSocDisplayHandoffMethod|0x01|UINT8|0x00000168

#Indicate if there is a GPT for each boot chain
  gNVIDIATokenSpaceGuid.PcdGptIsPerBootChain|FALSE|BOOLEAN|0x000000A5

#Timeout in microseconds in hsp doorbell response, 0 for infinite
  gNVIDIATokenSpaceGuid.PcdHspDoorbellTimeout|0|UINT32|0x00000007

#Option to boot board in recovery mode
  gNVIDIATokenSpaceGuid.PcdServerPowerControlSetting|0|UINT8|0x00000128

#Option to boot RCM mode using kernel cmdline from DTB instead of boot.img
  gNVIDIATokenSpaceGuid.PcdRcmUseDtbCmdline|FALSE|BOOLEAN|0x000000A7

#Enumeration poll timeout in ms (0=disable)
  gNVIDIATokenSpaceGuid.PcdEnumerationTimeoutMs|0|UINT32|0x000000AC

#Option to floorsweep CPUs by DTB NOP
  gNVIDIATokenSpaceGuid.PcdFloorsweepCpusByDtbNop|FALSE|BOOLEAN|0x000000AF

#Option to generate GPU PXM _DSD entries.
  gNVIDIATokenSpaceGuid.PcdGenerateGpuPxmInfoDsd|FALSE|BOOLEAN|0x000000B0

[PcdsFixedAtBuild,PcdsPatchableInModule,PcdsDynamic,PcdsDynamicEx]
  # User Authentication for BIOS Setup Menu feature
  # Indicate whether the password is cleared.
  # When it is configured to Dynamic or DynamicEx, it can be set through detection using
  # a platform-specific method (e.g. Board Jumper set) in a actual platform in early boot phase.<BR><BR>
  # @Prompt The password clear status
  gUserAuthFeaturePkgTokenSpaceGuid.PcdPasswordCleared|FALSE|BOOLEAN|0x00000104

#Base address of SCRATCH Register
  gNVIDIATokenSpaceGuid.PcdNvScratchRegBase|0x0|UINT64|0x0000011B

#Start offset of SCRATCH Register
  gNVIDIATokenSpaceGuid.PcdNvFileNameStartReg|0x0|UINT32|0x0000011C

#Max offset of SCRATCH Register
  gNVIDIATokenSpaceGuid.PcdNvFileNameRegLimit|0x0|UINT32|0x0000011D

#Start offset of SCRATCH Register
  gNVIDIATokenSpaceGuid.PcdNvLineNumStartReg|0x0|UINT32|0x0000011E

#Max offset of SCRATCH Register
  gNVIDIATokenSpaceGuid.PcdNvLineNumRegLimit|0x0|UINT32|0x0000011F

#Start offset of SCRATCH Register
  gNVIDIATokenSpaceGuid.PcdNvFwNameStartReg|0x0|UINT32|0x00000120

#Option to log crash information to scratch registers
  gNVIDIATokenSpaceGuid.PcdNvLogToScratchRegs|FALSE|BOOLEAN|0x00000121

#Firmware String to log errors.
  gNVIDIATokenSpaceGuid.PcdNvFirmwareStr|"UENS"|VOID*|0x000000122

#Scratch Reg Offset for ExceptionType
  gNVIDIATokenSpaceGuid.PcdExceptionTypeStartReg|0x0|UINT32|0x00000123

#Scratch Reg Offset to log FAR reg value
  gNVIDIATokenSpaceGuid.PcdFARStartReg|0x0|UINT32|0x00000124

#Scratch Reg Offset to log FP
  gNVIDIATokenSpaceGuid.PcdFPStartReg|0x0|UINT32|0x00000125

#Number of scratch registers available for FP
  gNVIDIATokenSpaceGuid.PcdFPRegLimit|0x0|UINT32|0x00000126

#Number of scratch registers available per Frame
  gNVIDIATokenSpaceGuid.PcdPerFpLimit|0x0|UINT32|0x00000127

#Expose RTC I2C to OS
  gNVIDIATokenSpaceGuid.PcdExposeRtcI2cToOs|FALSE|BOOLEAN|0x0000012E

#Key to enter shell via hotkey, this is case sensitive. Disable by setting to 0.
  gNVIDIATokenSpaceGuid.PcdShellHotkey|'s'|UINT16|0x00000130

#Control whether Physical Presence PCD is left enabled/disabled.
  gNVIDIATokenSpaceGuid.PcdDisablePhysicalPresence|FALSE|BOOLEAN|0x00000131

#HSP Doorbell Region Size
  gNVIDIATokenSpaceGuid.PcdHspDoorbellRegionSize|0x0|UINT32|0x00000150

# Ethernet Base, Size and Intr Id
  gNVIDIATokenSpaceGuid.PcdEthernetBaseAddr|0x03B40000|UINT32|0x00000160
  gNVIDIATokenSpaceGuid.PcdEthernetSize|0x00000100|UINT32|0x00000161
  gNVIDIATokenSpaceGuid.PcdEthernetIntrId|0x00|UINT32|0x00000162

#BPMP Contained Inside Socket
  gNVIDIATokenSpaceGuid.PcdBpmpContainedInSocket|FALSE|BOOLEAN|0x00000163

#Flash options
  gNVIDIATokenSpaceGuid.PcdFwBlobIsSupported|FALSE|BOOLEAN|0x000000B3
  gNVIDIATokenSpaceGuid.PcdDataOnlyFlashIsSupported|FALSE|BOOLEAN|0x000000B4
